{"version":3,"sources":["logo.svg","modals/CreateAnnounc.js","modals/EditAnnounc.js","components/Card.js","components/AnnouncList.js","App.js","reportWebVitals.js","index.js"],"names":["CreateAnnouncPopup","modal","toggle","save","useState","announcName","setAnnouncName","description","setDescription","date","setDate","createBtn","setCreateBtn","handleChange","e","target","name","value","Modal","isOpen","ModalHeader","ModalBody","className","type","onChange","onInput","val","rows","ModalFooter","Button","color","onClick","preventDefault","announcObj","disabled","EditAnnouncPopup","updateAnnounc","useEffect","Name","Description","Date","tempObj","Card","index","deleteAnnounc","updateListArray","setModal","console","log","colors","primaryColor","secondaryColor","class","style","EditAnnounc","obj","AnnouncList","announcList","setAnnouncList","searchTerm","setSearchTerm","filteredAnnouncList","filter","announc","toLowerCase","includes","arr","localStorage","getItem","JSON","parse","tempList","splice","setItem","stringify","window","location","reload","placeholder","event","map","CreateAnnounc","push","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e8e7737e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useState } from 'react';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\n\r\nconst CreateAnnouncPopup = ({modal, toggle, save}) => {\r\n    const [announcName, setAnnouncName] = useState('');\r\n    const [description, setDescription] = useState('');  \r\n    const [date, setDate] = useState('');  \r\n    const [createBtn, setCreateBtn] = useState(true);  \r\n    \r\n\r\n    const launchCreateBtn = (val) => {\r\n\r\n        if (val.target.value !== \"\") {\r\n\r\n            setCreateBtn(false)\r\n        }\r\n\r\n    }\r\n        \r\n\r\n    const handleChange = (e) => {\r\n        \r\n        const {name, value} = e.target\r\n\r\n        if(name === \"announcName\"){\r\n            setAnnouncName(value)\r\n          \r\n        } if(name === \"description\" ){\r\n            setDescription(value) } \r\n\r\n         if(name === \"date\" ){\r\n            setDate(value)\r\n          \r\n        } \r\n      \r\n      \r\n\r\n    } \r\n    \r\n\r\n    const handleSave = (e) => {\r\n        e.preventDefault()\r\n        let announcObj = {}\r\n        announcObj[\"Name\"] = announcName\r\n        announcObj[\"Description\"] = description \r\n        announcObj[\"Date\"] = date\r\n        save(announcObj)\r\n\r\n    } \r\n\r\n   \r\n    \r\n    return (\r\n        <Modal isOpen={modal} toggle={toggle}>\r\n            <ModalHeader toggle={toggle}>Create Announce</ModalHeader>\r\n            <ModalBody>\r\n            \r\n                    <div className = \"form-group\">\r\n                        <label>Announce</label>\r\n                        <input type=\"text\" className = \"form-control\"  value = {announcName}  onChange = {handleChange}  onInput = {launchCreateBtn} name = \"announcName\"/>\r\n                    </div>\r\n                    <div className = \"form-group\">\r\n                        <label>Description</label>\r\n                        <textarea rows = \"5\" className = \"form-control\" value = {description} onChange = {handleChange} name = \"description\"></textarea>\r\n                    </div> \r\n                    <div className = \"form-group\">\r\n                        <label>Date</label>\r\n                       <input type=\"date\" className = \"form-control\"  value = {date}  onChange = {handleChange} name=\"date\" />\r\n                    </div>\r\n            </ModalBody>\r\n            <ModalFooter>\r\n            <Button color=\"primary\" onClick={handleSave} disabled={createBtn}>Create</Button>{' '}\r\n            <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\r\n            </ModalFooter>\r\n      </Modal>\r\n    );\r\n};\r\n\r\nexport default CreateAnnouncPopup;","import React, { useState , useEffect} from 'react';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\n\r\nconst EditAnnouncPopup = ({modal, toggle, updateAnnounc, announcObj}) => {\r\n    const [announcName, setAnnouncName] = useState('');\r\n    const [description, setDescription] = useState(''); \r\n    const [date, setDate] = useState('');  \r\n\r\n    const handleChange = (e) => {\r\n        \r\n        const {name, value} = e.target\r\n\r\n        if(name === \"announcName\"){\r\n            setAnnouncName(value)\r\n          \r\n        } if(name === \"description\" ){\r\n            setDescription(value) } \r\n\r\n         if(name === \"date\" ){\r\n            setDate(value)\r\n          \r\n        } \r\n\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        setAnnouncName(announcObj.Name)\r\n        setDescription(announcObj.Description) \r\n        setDate(announcObj.Date)\r\n    },[]) \r\n\r\n    const handleUpdate = (e) => {\r\n        e.preventDefault();\r\n        let tempObj = {}\r\n        tempObj['Name'] = announcName\r\n        tempObj['Description'] = description \r\n        tempObj['Date'] = date\r\n        updateAnnounc(tempObj)\r\n    }\r\n\r\n    return (\r\n        <Modal isOpen={modal} toggle={toggle}>\r\n            <ModalHeader toggle={toggle}>Update Announc</ModalHeader>\r\n            <ModalBody>\r\n            \r\n                    <div className = \"form-group\">\r\n                        <label>Announc Name</label>\r\n                        <input type=\"text\" className = \"form-control\" value = {announcName} onChange = {handleChange} name = \"announcName\"/>\r\n                    </div>\r\n                    <div className = \"form-group\">\r\n                        <label>Description</label>\r\n                        <textarea rows = \"5\" className = \"form-control\" value = {description} onChange = {handleChange} name = \"description\"></textarea>\r\n                    </div>\r\n                    <div className = \"form-group\">\r\n                        <label>Date</label>\r\n                       <input type=\"date\" className = \"form-control\"  value = {date}  onChange = {handleChange} name=\"date\" />\r\n                    </div>\r\n            </ModalBody>\r\n            <ModalFooter>\r\n            <Button color=\"primary\" onClick={handleUpdate}>Update</Button>{' '}\r\n            <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\r\n            </ModalFooter>\r\n      </Modal>\r\n    );\r\n};\r\n\r\nexport default EditAnnouncPopup;","import React, {useState} from 'react';\r\nimport EditAnnounc from '../modals/EditAnnounc' \r\n// import {format} from 'date-fns'\r\n\r\nconst Card = ({announcObj, index, deleteAnnounc, updateListArray}) => {\r\n    const [modal, setModal] = useState(false);\r\n    console.log(announcObj)\r\n    const colors = [\r\n        {\r\n            primaryColor : \"#5D93E1\",\r\n            secondaryColor : \"#ECF3FC\"\r\n        },\r\n        {\r\n            primaryColor : \"#F9D288\",\r\n            secondaryColor : \"#FEFAF1\"\r\n        },\r\n        {\r\n            primaryColor : \"#5DC250\",\r\n            secondaryColor : \"#F2FAF1\"\r\n        },\r\n        {\r\n            primaryColor : \"#F48687\",\r\n            secondaryColor : \"#FDF1F1\"\r\n        },\r\n        {\r\n            primaryColor : \"#B964F7\",\r\n            secondaryColor : \"#F3F0FD\"\r\n        }\r\n    ]\r\n   \r\n    const toggle = () => {\r\n        setModal(!modal);\r\n    }\r\n\r\n    const updateAnnounc = (obj) => {\r\n        updateListArray(obj, index)\r\n    }\r\n\r\n    const handleDelete = () => {\r\n        deleteAnnounc(index)\r\n    }  \r\n\r\n    // const calendarDate = format(new Date(), \"dd/MM/yy\")  \r\n\r\n    return (\r\n        <div class = \"card-wrapper mr-5\">\r\n            <div class = \"card-top\" style={{\"background-color\": colors[index%5].primaryColor}}></div>\r\n            <div class = \"announc-holder\">\r\n                <span class = \"card-header\" style={{\"background-color\": colors[index%5].secondaryColor, \"border-radius\": \"10px\"}}>{announcObj.Name}</span>\r\n                <p className = \"mt-3\">{announcObj.Description}</p> \r\n                <span className='dateTime'> {announcObj.Date}</span>\r\n                <div style={{\"position\": \"absolute\", \"right\" : \"20px\", \"bottom\" : \"20px\"}}> \r\n                   \r\n                    <i class = \"far fa-edit mr-3\" style={{\"color\" : colors[index%5].primaryColor, \"cursor\" : \"pointer\"}} onClick = {() => setModal(true)}></i>\r\n                    <i class=\"fas fa-trash-alt\" style = {{\"color\" : colors[index%5].primaryColor, \"cursor\" : \"pointer\"}} onClick = {handleDelete}></i>\r\n                </div>\r\n        </div>\r\n        <EditAnnounc modal = {modal} toggle = {toggle} updateAnnounc = {updateAnnounc} announcObj = {announcObj}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Card;","import React, {useEffect, useState} from 'react';\r\nimport CreateAnnounc from '../modals/CreateAnnounc'\r\nimport Card from './Card';\r\n\r\n\r\n\r\nconst AnnouncList = () => {\r\n    const [modal, setModal] = useState(false);\r\n    const [announcList, setAnnouncList] = useState([]); \r\n    const [searchTerm, setSearchTerm] = useState(''); \r\n     \r\n    const filteredAnnouncList = announcList.filter(announc => { \r\n        return announc.Name.toLowerCase().includes(searchTerm.toLowerCase())\r\n    }) \r\n\r\n    useEffect(() => {\r\n        let arr = localStorage.getItem(\"announcList\")\r\n       \r\n        if(arr){\r\n            let obj = JSON.parse(arr)\r\n            setAnnouncList(obj)\r\n        }\r\n    }, [])\r\n\r\n\r\n    const deleteAnnounc = (index) => {\r\n        let tempList = announcList\r\n        tempList.splice(index, 1)\r\n        localStorage.setItem(\"announcList\", JSON.stringify(tempList))\r\n        setAnnouncList(tempList)\r\n        window.location.reload()\r\n    }\r\n\r\n    const updateListArray = (obj, index) => {\r\n        let tempList = announcList\r\n        tempList[index] = obj\r\n        localStorage.setItem(\"announcList\", JSON.stringify(tempList))\r\n        setAnnouncList(tempList)\r\n        window.location.reload()\r\n    }\r\n\r\n    const toggle = () => {\r\n        setModal(!modal);\r\n    }\r\n\r\n    const saveAnnounc = (announcObj) => {\r\n        let tempList = announcList\r\n        tempList.push(announcObj)\r\n        localStorage.setItem(\"announcList\", JSON.stringify(tempList))\r\n        setAnnouncList(announcList)\r\n        setModal(false)\r\n    }\r\n\r\n\r\n    return (\r\n        <> \r\n           \r\n            <div className = \"header text-center\">\r\n                <h3>Announce Website</h3> \r\n                <button className = \"btn btn-primary mt-2\" onClick = {() => setModal(true)} >Create Announce</button> \r\n            </div>   \r\n            <div className='search'>\r\n             <input \r\n                className='search-input'\r\n                type=\"text\"\r\n                placeholder=\"Search...\" \r\n                onChange={(event) => { \r\n                setSearchTerm(event.target.value);\r\n               }}\r\n             />\r\n             </div>\r\n           \r\n            <div className = \"announc-container\">\r\n            {filteredAnnouncList.map((obj , index) => <Card announcObj = {obj} index = {index} deleteAnnounc = {deleteAnnounc} updateListArray = {updateListArray}/> )}\r\n            </div>\r\n            <CreateAnnounc toggle = {toggle} modal = {modal} save = {saveAnnounc}/>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AnnouncList; \r\n","import logo from './logo.svg';\r\nimport './App.css';\r\nimport AnnouncList from './components/AnnouncList' \r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport 'font-awesome/css/font-awesome.min.css'\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">   \r\n     <AnnouncList />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}